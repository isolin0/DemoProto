using UnityEngine;
using VRTK;
using System.Collections;

public class Interactable_Object_Extension : MonoBehaviour
{
	public Rigidbody rb;
	bool grabbed;
	bool badHit;
	
	// this script demonstrates how to detect when this object has been grabbed by a controller.  

	// it requires the object already have the VRTK_InteractableObject attached.  

	// it simpley subscribes to the event generated by the interactable object script.  

	// there are many more events to subscribe to so lots of interaction options are posible. 



	// use this script to ADD functionality to your object not provied by the VRTK scripts.

	// this could include triggering other actions based, etc. 

	// a full list of events can be found in the interactable object script.







	// Use this for initialization

	void Start()

	{
		badHit = false;
		grabbed = false;
		rb.GetComponent<Rigidbody>();

		//make sure the object has the VRTK script attached... 

		if (GetComponent<VRTK_InteractableObject>() == null)

		{

			Debug.LogError("Team3_Interactable_Object_Extension is required to be attached to an Object that has the VRTK_InteractableObject script attached to it");

			return;

		}



		//subscribe to the event.  NOTE: the "ObectGrabbed"  this is the procedure to invoke if this objectis grabbed.. 

		GetComponent<VRTK_InteractableObject>().InteractableObjectGrabbed += new InteractableObjectEventHandler(ObjectGrabbed);

		GetComponent<VRTK_InteractableObject>().InteractableObjectUngrabbed += new InteractableObjectEventHandler(ObjectUnGrabbed);




	}
	/*
	private void Update()
	{
		if (grabbed)
		{
			rb.isKinematic = false;
		}
	}
	*/
	
	//this object has been grabbed.. so do what ever is in the code.. 

	private void ObjectGrabbed(object sender, InteractableObjectEventArgs e)

	{
	
		Debug.Log("Im Grabbed");
		Grabbed(true);
		rb.isKinematic = false;
	}

	private void ObjectUnGrabbed(object sender, InteractableObjectEventArgs e)

	{
		Debug.Log("Not Grabbed");
			Grabbed(false);
		rb.isKinematic = false;
		badHit = false;
	}
	
	private void Grabbed(bool grab_state)
	{
		grabbed = grab_state;

		if (grabbed)
		{
			rb.isKinematic = false;
		}

		//rb.isKinematic = false;
	}
	


	void OnTriggerEnter(Collider col)
	{
		if (!grabbed && !badHit)
		{
			if (col.tag == "KnifeStuck")
			{
				//grabbed = false;
				rb.isKinematic = true;

			}
		}
			
		
		
	}

	private void OnCollisionEnter(Collision coll)
	{
		badHit = true;
		Debug.Log("bad hit");
	}
	
}

